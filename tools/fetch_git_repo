#!/usr/bin/env python

import os
import sys
import subprocess

from pkgutils import system_info, git_describe, sh
from optparse import OptionParser

root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


def git_clone(source):
    sh("git clone %s ." % (source))


def get_update_existing(source):
    sh("git remote set-url origin %s" % (source))
    sh("git clean -d -f -x")
    sh("git fetch origin")
    sh("git checkout origin/master")
    sh("git submodule update --init --recursive")


def is_git_repo(dest):
    cmd = "git rev-parse --resolve-git-dir %s/.git HEAD" % (dest)
    print cmd
    rv = subprocess.call(cmd, shell=True)
    if rv == 0:
        return True
    return False


def ensure_dir(d):
    if not os.path.exists(d):
        os.makedirs(d)

if __name__ == "__main__":
    usage = "usage: %prog [source-uri] [destination path]"
    parser = OptionParser(usage=usage)
    (options, args) = parser.parse_args()

    if len(args) != 2:
        parser.print_usage()
        sys.exit(1)

    source = args[0]
    dest = args[1]

    if is_git_repo(dest):
        os.chdir(dest)
        print "cd '%s'" % (dest)
        get_update_existing(source)
    else:
        ensure_dir(dest)
        os.chdir(dest)
        print "cd '%s'" % (dest)
        git_clone(source)

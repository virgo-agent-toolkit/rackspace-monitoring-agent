#!/usr/bin/env python

import os
import sys
import re
import subprocess

from optparse import OptionParser

import pkgutils


def main():
    usage = "usage: %prog [destination path]"
    parser = OptionParser(usage=usage)
    (options, args) = parser.parse_args()

    if len(args) != 1:
        parser.print_usage()
        sys.exit(1)

    dest = args[0]
    build_dir = pkgutils.package_builder_dir()

    command = os.path.join(build_dir, 'dump_syms')
    arg = os.path.join(build_dir, 'monitoring-agent')

    print('running %s %s' % (command, arg))

    p = subprocess.Popen([command, arg],
        cwd=build_dir, stdout=subprocess.PIPE)

    (stdout, stderr) = p.communicate()

    if p.returncode != 0:
        raise OSError('Failed to run dump_syms: %s' % p.stderr.read())

    head = stdout.split('\n', 1)[0]
    groups = re.search(" ([A-Z0-9]+) monitoring-agent", head)
    if not groups:
        raise AttributeError('Failed to get digest from head of symbol file')
    digest = groups.groups()[0]

    symbol_file = open("%s/symbol-%s" % (dest, digest), 'wb')
    symbol_file.write(stdout)
    symbol_file.close()

    print('all done')


if __name__ == "__main__":
    main()
